@model HiscoresViewModel
@{
    ViewData["Title"] = "Hiscores";
    ViewData["UseDataTable"] = true;
}

<ul class="nav nav-tabs">
    @foreach (var name in Enum.GetNames(typeof(HiscoresGameType)))
    {
        <li class="@ViewData[name + "Active"]"><a asp-controller="Hiscores" asp-action="Index" asp-route-type="@name">@name</a></li>
    }
</ul>
<h1>@ViewData["Title"]</h1>
<form class="form-inline">
    <input type="text" name="user" class="form-control" placeholder="Search username" />
    <button type="submit" class="btn btn-primary">Search</button>
</form>
<hr />
<table id="hiscoresTable" class="table table-striped table-condensed">
    <thead>
        <tr>
            <th>Seed</th>
            <th><input type="checkbox" /> Air</th>
            <th><input type="checkbox" /> Mind</th>
            <th><input type="checkbox" /> Water</th>
            <th><input type="checkbox" /> Earth</th>
            <th><input type="checkbox" /> Fire</th>
            <th><input type="checkbox" /> Body</th>
            <th><input type="checkbox" /> Sum</th>
        </tr>
    </thead>
</table>

<table id="statsTable" class="table table-striped table-condensed">
    <thead>
        <tr>
            <th></th>
            <th>Air</th>
            <th>Mind</th>
            <th>Water</th>
            <th>Earth</th>
            <th>Fire</th>
            <th>Body</th>
            <th>Sum</th>
            <th>MTI</th>
        </tr>
    </thead>
    <tr>
        <td>Maxes</td>
        @foreach (var value in Model.Maxes.ScoreValues)
        {
            <td>@value</td>
        }
        <td>@Model.Maxes.SumValue</td>
        <td>@Model.MaxTotalIndex</td>
    </tr>
    <tr>
        <td>Mins</td>
        @foreach (var value in Model.Mins.ScoreValues)
        {
            <td>@value</td>
        }
        <td>@Model.Mins.SumValue</td>
        <td>@Model.MinTotalIndex</td>
    </tr>
    <tr>
        <td>Averages</td>
        @foreach (var value in Model.Averages.ScoreValues)
        {
            <td>@Utilities.FormatValue(value, "F2")</td>
        }
        <td>@Utilities.FormatValue(Model.Averages.SumValue, "F2")</td>
        <td></td>
    </tr>
    <tr>
        <td>Stddevs</td>
        @foreach (var value in Model.StandardDeviations.ScoreValues)
        {
            <td>@Utilities.FormatValue(value, "F2")</td>
        }
        <td>@Utilities.FormatValue(Model.StandardDeviations.SumValue, "F2")</td>
        <td></td>
    </tr>
    <tr>
        <td># seeds</td>
        @foreach (var value in Model.Counts.ScoreValues)
        {
            <td>@value</td>
        }
        <td>@Model.Counts.SumValue</td>
        <td></td>
    </tr>
</table>

@section scripts {
    <script>
        var data, table;

        $(function () {
            data = @Json.Serialize(Model);
            var $checkboxes = $("#hiscoresTable input:checkbox");
            
            $.fn.dataTable.ext.search.push(
                function(settings, data, dataIndex) {
                    for (var i = 0; i < $checkboxes.length; i++)
                        if ($checkboxes[i].checked && data[i+1] === "")
                            return false;
                    return true;
                }
            );

            table = $("#hiscoresTable").DataTable({
                data: data.Rows,
                deferRender: true,
                columns: [
                    { data: "Seed" },
                    { data: "Scores.0" },
                    { data: "Scores.1" },
                    { data: "Scores.2" },
                    { data: "Scores.3" },
                    { data: "Scores.4" },
                    { data: "Scores.5" },
                    { data: "Sum" }
                ]
            });

            $checkboxes.click(function (e) {
                e.stopPropagation();
                table.draw();
            });
        });
    </script>
}
