@model MultiplayerViewModel
@{
    ViewData["Title"] = "Multiplayer";
    ViewData["UseDataTable"] = true;
}

<h1>@ViewData["Title"]</h1>
<p>The migration is still in progress. You can view the past multiplayer games, however.</p>

<h2>Games</h2>
<table id="gamesTable" class="table table-striped table-condensed table-hover table-clickable-rows" data-order='[[ 0, "desc" ]]'>
    <thead>
        <tr>
            <th>ID</th>
            <th>Timestamp</th>
            <th># players</th>
            <th>Usernames</th>
            <th># orbs</th>
            <th>Seed</th>
            <th>Altar</th>
            <th>Score</th>
        </tr>
    </thead>
</table>

@section scripts {
    <script src="~/js/gop.js"></script>
    <script>
        var games;

        $(function () {
            $("#gamesTable").on("click", "tbody > tr", function () {
                window.open("/Watch/Multiplayer/" + $(this).children("td:first").text());
            });

            games = @Json.Serialize(Model.Games);
            games.forEach(function (game) {
                game.Timestamp = new Date(game.Timestamp);
            });

            $("#gamesTable").DataTable({
                data: games,
                deferRender: true,
                columns: [
                    { data: "Id" },
                    {
                        data: "Timestamp",
                        render: function (data, type, row) {
                            if (type === "display")
                                return data.toLocaleString();
                            return data;
                        }
                    },
                    { data: "NumberOfPlayers" },
                    { data: "Usernames" },
                    { data: "NumberOfOrbs" },
                    { data: "Seed" },
                    {
                        data: "Altar",
                        render: function (data, type, row) {
                            if (type === "display") {
                                if (AltarData[data] !== void 0) {
                                    // Capitalize name
                                    var name = AltarData[data].name;
                                    return name[0].toUpperCase() + name.slice(1);
                                }
                                return data + " (custom)";
                            }
                            return data;
                        }
                    },
                    { data: "Score" }
                ],
                stateSave: true
            });
        })
    </script>
}
