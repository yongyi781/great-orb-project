@model MultiplayerViewModel
@{
    ViewData["Title"] = "Multiplayer";
}

<h2>Multiplayer</h2>
<div id="multiplayerInterface">
    <p>Connected players:</p>
    <ul data-bind="foreach: players">
        <li data-bind="html: $root.playerHtml($index())"></li>
    </ul>
    <div class="form-inline">
        <select id="altarSelect" class="form-control" data-bind="value: altar, enable: startState() === 0">
            <option value="1">Air</option>
            <option value="2">Mind</option>
            <option value="3">Water</option>
            <option value="4">Earth</option>
            <option value="5">Fire</option>
            <option value="6">Body</option>
        </select>
        <input type="number" id="seedInput" class="form-control" data-bind="value: seed, enable: startState() === 0" placeholder="Seed" />
        <div class="checkbox">
            <label>
                <input type="checkbox" data-bind="checked: isWatching, enable: startState() === 0" /> Watch
            </label>
        </div>
        <button class="btn btn-primary" data-bind="click: sendStartSignal, enable: startState() === 0 && !isWatching(), text: startButtonText()"></button>
        <button class="btn btn-primary" data-bind="click: sendStopSignal, enable: !isWatching()">Reset</button>
    </div>
</div>
<div id="game" class="align-center">
</div>
<div id="sorry" style="display: none">
</div>

<div id="gamesContainer">
    <h2>All Games</h2>
    <p>Clicking a game will open a new window which will show a replay of the game.</p>
    <div class="form-inline">
        <input type="text" id="usernameFilterInput" class="form-control input-sm" data-bind="value: usernameFilter" placeholder="Filter username" />
        <input type="number" id="seedFilterInput" class="form-control input-sm" data-bind="value: seedFilter" placeholder="Filter seed" />
        <select id="altarFilterSelect" class="form-control input-sm" data-bind="value: altarFilter">
            <option value="" selected="selected">All altars</option>
            <option value="1">Air</option>
            <option value="2">Mind</option>
            <option value="3">Water</option>
            <option value="4">Earth</option>
            <option value="5">Fire</option>
            <option value="6">Body</option>
        </select>
        <select id="showLastSelect" class="form-control input-sm" data-bind="value: numGamesToShow">
            <option value="20" selected="selected">Show last 20 games</option>
            <option value="50">Show last 50 games</option>
            <option value="100">Show last 100 games</option>
            <option value="200">Show last 200 games</option>
            <option value="2147483647">Show all games</option>
        </select>
        @if (User.IsInRole("admin"))
        {
            <button type="button" id="verifyGamesButton" class="btn btn-success btn-sm">Verify all games</button>
        }
    </div>
    <table class="table table-striped table-condensed table-hover goplist-clickable-rows">
        <thead>
            <tr>
                <th>ID</th>
                <th>Time</th>
                <th># players</th>
                <th>Usernames</th>
                <th>Seed</th>
                <th>Altar</th>
                <th>Score</th>
            </tr>
        </thead>
        <tbody data-bind="foreach: filteredGames">
            <tr data-bind="attr: { 'data-code': code }">
                <td data-bind="text: id"></td>
                <td data-bind="text: time"></td>
                <td data-bind="text: numberOfPlayers"></td>
                <td data-bind="text: usernames"></td>
                <td data-bind="text: seed"></td>
                <td data-bind="text: $root.altarNames[altar]"></td>
                <td data-bind="text: score"></td>
            </tr>
        </tbody>
    </table>
</div>

<!-- Axiliary elements -->
<div id="error-modal" title="Error" style="display: none">
</div>

@section Scripts {
    <script src="//cdnjs.cloudflare.com/ajax/libs/knockout/3.3.0/knockout-min.js"></script>
    <script src="~/lib/signalr/jquery.signalR.min.js"></script>
    <script src="~/js/gop.min.js"></script>
    <script src="~/js/gopui.js"></script>
    <script src="~/js/utils.js"></script>
    <script src="~/signalr/hubs"></script>
    <script src="~/js/multiplayer.js"></script>
    <script>
        var gopControls;
        @if (Model.GopControls != null)
        {
        <text>
        var gopControls = JSON.parse('@Html.Raw(Model.GopControls)');
        </text>
        }
        init(gopControls);
    </script>
}
